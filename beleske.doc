* URL: https://scotch.io/tutorials/build-a-restful-json-api-with-rails-5-part-one

* Endpoints
		Endpoint								Functionality
			POST /signup							Signup
			POST /auth/login					Login
			GET /auth/logout					Logout
			GET /todos								List all todos
			POST /todos								Create a new todo
			GET /todos/:id						Get a todo
			PUT /todos/:id						Update a todo
			DELETE /todos/:id					Delete a todo and its items
			GET /todos/:id/items			Get a todo item
			PUT /todos/:id/items			Update a todo item
			DELETE /todos/:id/items		Delete a todo item

* Commands:
		- bundle exec rails generate rspec:install
		- rails g model Todo title:string created_by:string
		- rails g model Item name:string done:boolean todo:references
		- bundle exec rails g controller Todos
		- bundle exec rails g controller Items
		- mkdir spec/requests && touch spec/requests/{todos_spec.rb,items_spec.rb} 
		- touch spec/factories/{todos.rb,items.rb}

* By adding todo:references we're telling the generator to set up an association with the Todo model. 
	This will do the following:
		- Add a foreign key column todo_id to the items table
		- Setup a belongs_to association in the Item model

* we won't be writing any controller specs. We're going to write request specs instead.

* Request specs are designed to drive behavior through the full stack, including routing. This means they can hit the applications' HTTP endpoints as opposed to controller specs which call methods directly. Since we're building an API application, this is exactly the kind of behavior we want from our tests.